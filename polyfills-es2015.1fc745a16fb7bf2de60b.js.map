{"version":3,"sources":["webpack:///node_modules/smoothscroll-polyfill/dist/smoothscroll.js","webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["module","exports","polyfill","w","window","d","document","documentElement","style","__forceSmoothScrollPolyfill__","userAgent","Element","HTMLElement","original","scroll","scrollTo","scrollBy","elementScroll","prototype","scrollElement","scrollIntoView","now","performance","bind","Date","ROUNDING_TOLERANCE","navigator","RegExp","join","test","undefined","arguments","shouldBailOut","smoothScroll","call","body","left","scrollX","pageXOffset","top","scrollY","pageYOffset","this","scrollLeft","scrollTop","SyntaxError","behavior","scrollableParent","findScrollableParent","parentRects","getBoundingClientRect","clientRects","getComputedStyle","position","x","y","firstArg","TypeError","hasScrollableSpace","el","axis","clientHeight","scrollHeight","clientWidth","scrollWidth","canOverflow","overflowValue","isScrollable","isScrollableY","isScrollableX","parentNode","host","scrollable","startX","startY","method","startTime","step","context","value","currentX","currentY","elapsed","Math","cos","PI","requestAnimationFrame","global","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","options","_state","self","useG","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","defineProperty","_uncaughtPromiseErrors","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","clearRejectedNoCatch","trace","currentTask","configurable","enumerable","writable","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","get","Symbol","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","isDetectedIEOrEdge","ieOrEdge","isIE","ua","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","IMMEDIATE_PROPAGATION_SYMBOL","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","falseEventName","trueEventName","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","Event","targetName","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","concat","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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B,CAAC,QACnBC,EAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,EAAoB,CAAC,SAAU,SAAU,SACzCC,EAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,EAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,EAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,EAAmB,CAAC,QAAS,WAC7BC,EApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6CC,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGV,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,e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","file":"x","sourcesContent":["/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n\n}());\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone' // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport * as smoothscroll from 'smoothscroll-polyfill'\nsmoothscroll.polyfill()\n","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"]}